/*
 * This file is generated by jOOQ.
*/
package com.topscore.omnichannel.order.jooq.tables;


import com.topscore.omnichannel.order.jooq.Keys;
import com.topscore.omnichannel.order.jooq.tables.records.OrderRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Order extends TableImpl<OrderRecord> {

    private static final long serialVersionUID = -52851166;

    /**
     * The reference instance of <code>order.order</code>
     */
    public static final Order ORDER_ = new Order();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderRecord> getRecordType() {
        return OrderRecord.class;
    }

    /**
     * The column <code>order.order.number</code>.
     */
    public final TableField<OrderRecord, Integer> NUMBER = createField("number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>order.order.write_off</code>.
     */
    public final TableField<OrderRecord, Boolean> WRITE_OFF = createField("write_off", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>order.order.source_type</code>.
     */
    public final TableField<OrderRecord, Integer> SOURCE_TYPE = createField("source_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>order.order.member_number</code>.
     */
    public final TableField<OrderRecord, String> MEMBER_NUMBER = createField("member_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>order.order</code> table reference
     */
    public Order() {
        this("order", null);
    }

    /**
     * Create an aliased <code>order.order</code> table reference
     */
    public Order(String alias) {
        this(alias, ORDER_);
    }

    private Order(String alias, Table<OrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private Order(String alias, Table<OrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return com.topscore.omnichannel.order.jooq.Order.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderRecord>>asList(Keys.KEY_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderRecord, ?>>asList(Keys.FK414GUCUR8MOYN7OVP39VXKPMY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Order as(String alias) {
        return new Order(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Order rename(String name) {
        return new Order(name, null);
    }
}
