/*
 * This file is generated by jOOQ.
*/
package com.topscore.omnichannel.order.jooq.tables;


import com.topscore.omnichannel.order.jooq.Keys;
import com.topscore.omnichannel.order.jooq.Order;
import com.topscore.omnichannel.order.jooq.tables.records.OrderGoodsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderGoods extends TableImpl<OrderGoodsRecord> {

    private static final long serialVersionUID = -522137932;

    /**
     * The reference instance of <code>order.order_goods</code>
     */
    public static final OrderGoods ORDER_GOODS = new OrderGoods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderGoodsRecord> getRecordType() {
        return OrderGoodsRecord.class;
    }

    /**
     * The column <code>order.order_goods.order_number</code>.
     */
    public final TableField<OrderGoodsRecord, Integer> ORDER_NUMBER = createField("order_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>order.order_goods.order_write_off</code>.
     */
    public final TableField<OrderGoodsRecord, Boolean> ORDER_WRITE_OFF = createField("order_write_off", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "");

    /**
     * The column <code>order.order_goods.quality</code>.
     */
    public final TableField<OrderGoodsRecord, Integer> QUALITY = createField("quality", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>order.order_goods.goods_number</code>.
     */
    public final TableField<OrderGoodsRecord, String> GOODS_NUMBER = createField("goods_number", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>order.order_goods</code> table reference
     */
    public OrderGoods() {
        this("order_goods", null);
    }

    /**
     * Create an aliased <code>order.order_goods</code> table reference
     */
    public OrderGoods(String alias) {
        this(alias, ORDER_GOODS);
    }

    private OrderGoods(String alias, Table<OrderGoodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderGoods(String alias, Table<OrderGoodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Order.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderGoodsRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_GOODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderGoodsRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderGoodsRecord>>asList(Keys.KEY_ORDER_GOODS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderGoodsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderGoodsRecord, ?>>asList(Keys.FKIO4DNP4A0HXMD2C1VJAO7VYT7, Keys.FK7IG6A3V9C9ALUSUPY6OYXLFOW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderGoods as(String alias) {
        return new OrderGoods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderGoods rename(String name) {
        return new OrderGoods(name, null);
    }
}
