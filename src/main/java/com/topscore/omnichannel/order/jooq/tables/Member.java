/*
 * This file is generated by jOOQ.
*/
package com.topscore.omnichannel.order.jooq.tables;


import com.topscore.omnichannel.order.jooq.Keys;
import com.topscore.omnichannel.order.jooq.Order;
import com.topscore.omnichannel.order.jooq.tables.records.MemberRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Member extends TableImpl<MemberRecord> {

    private static final long serialVersionUID = -871127847;

    /**
     * The reference instance of <code>order.member</code>
     */
    public static final Member MEMBER = new Member();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberRecord> getRecordType() {
        return MemberRecord.class;
    }

    /**
     * The column <code>order.member.number</code>.
     */
    public final TableField<MemberRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>order.member.city</code>.
     */
    public final TableField<MemberRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.member.county</code>.
     */
    public final TableField<MemberRecord, String> COUNTY = createField("county", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.member.detail</code>.
     */
    public final TableField<MemberRecord, String> DETAIL = createField("detail", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.member.state</code>.
     */
    public final TableField<MemberRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.member.street</code>.
     */
    public final TableField<MemberRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.member.name</code>.
     */
    public final TableField<MemberRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>order.member</code> table reference
     */
    public Member() {
        this("member", null);
    }

    /**
     * Create an aliased <code>order.member</code> table reference
     */
    public Member(String alias) {
        this(alias, MEMBER);
    }

    private Member(String alias, Table<MemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private Member(String alias, Table<MemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Order.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberRecord>>asList(Keys.KEY_MEMBER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Member as(String alias) {
        return new Member(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Member rename(String name) {
        return new Member(name, null);
    }
}
