/*
 * This file is generated by jOOQ.
*/
package com.topscore.omnichannel.order.jooq.tables;


import com.topscore.omnichannel.order.jooq.Keys;
import com.topscore.omnichannel.order.jooq.Order;
import com.topscore.omnichannel.order.jooq.tables.records.OrderMessageRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderMessage extends TableImpl<OrderMessageRecord> {

    private static final long serialVersionUID = -147825381;

    /**
     * The reference instance of <code>order.order_message</code>
     */
    public static final OrderMessage ORDER_MESSAGE = new OrderMessage();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderMessageRecord> getRecordType() {
        return OrderMessageRecord.class;
    }

    /**
     * The column <code>order.order_message.id</code>.
     */
    public final TableField<OrderMessageRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * The column <code>order.order_message.type</code>.
     */
    public final TableField<OrderMessageRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>order.order_message.content</code>.
     */
    public final TableField<OrderMessageRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>order.order_message.created_time</code>.
     */
    public final TableField<OrderMessageRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>order.order_message.sent_time</code>.
     */
    public final TableField<OrderMessageRecord, Timestamp> SENT_TIME = createField("sent_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>order.order_message.id_card</code>.
     */
    public final TableField<OrderMessageRecord, String> ID_CARD = createField("id_card", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>order.order_message.created_date</code>.
     */
    public final TableField<OrderMessageRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>order.order_message.message</code>.
     */
    public final TableField<OrderMessageRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>order.order_message.sent_date</code>.
     */
    public final TableField<OrderMessageRecord, Timestamp> SENT_DATE = createField("sent_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>order.order_message.source</code>.
     */
    public final TableField<OrderMessageRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>order.order_message</code> table reference
     */
    public OrderMessage() {
        this("order_message", null);
    }

    /**
     * Create an aliased <code>order.order_message</code> table reference
     */
    public OrderMessage(String alias) {
        this(alias, ORDER_MESSAGE);
    }

    private OrderMessage(String alias, Table<OrderMessageRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderMessage(String alias, Table<OrderMessageRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Order.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderMessageRecord> getPrimaryKey() {
        return Keys.KEY_ORDER_MESSAGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderMessageRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderMessageRecord>>asList(Keys.KEY_ORDER_MESSAGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderMessage as(String alias) {
        return new OrderMessage(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderMessage rename(String name) {
        return new OrderMessage(name, null);
    }
}
