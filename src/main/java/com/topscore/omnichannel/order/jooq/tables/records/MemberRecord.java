/*
 * This file is generated by jOOQ.
*/
package com.topscore.omnichannel.order.jooq.tables.records;


import com.topscore.omnichannel.order.jooq.tables.Member;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> implements Record7<String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1017510896;

    /**
     * Setter for <code>order.member.number</code>.
     */
    public void setNumber(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>order.member.number</code>.
     */
    public String getNumber() {
        return (String) get(0);
    }

    /**
     * Setter for <code>order.member.city</code>.
     */
    public void setCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>order.member.city</code>.
     */
    public String getCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>order.member.county</code>.
     */
    public void setCounty(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>order.member.county</code>.
     */
    public String getCounty() {
        return (String) get(2);
    }

    /**
     * Setter for <code>order.member.detail</code>.
     */
    public void setDetail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>order.member.detail</code>.
     */
    public String getDetail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>order.member.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>order.member.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>order.member.street</code>.
     */
    public void setStreet(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>order.member.street</code>.
     */
    public String getStreet() {
        return (String) get(5);
    }

    /**
     * Setter for <code>order.member.name</code>.
     */
    public void setName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>order.member.name</code>.
     */
    public String getName() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Member.MEMBER.NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Member.MEMBER.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Member.MEMBER.COUNTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Member.MEMBER.DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Member.MEMBER.STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Member.MEMBER.STREET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Member.MEMBER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCounty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDetail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getStreet();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value1(String value) {
        setNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value2(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value3(String value) {
        setCounty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value4(String value) {
        setDetail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value5(String value) {
        setState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value6(String value) {
        setStreet(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord value7(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(String number, String city, String county, String detail, String state, String street, String name) {
        super(Member.MEMBER);

        set(0, number);
        set(1, city);
        set(2, county);
        set(3, detail);
        set(4, state);
        set(5, street);
        set(6, name);
    }
}
